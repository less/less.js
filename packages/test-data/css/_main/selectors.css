h1 a:hover,
h2 a:hover,
h3 a:hover,
h1 p:hover,
h2 p:hover,
h3 p:hover {
  color: red;
}
#all {
  color: blue;
}
#the {
  color: blue;
}
#same {
  color: blue;
}
ul,
li,
div,
q,
blockquote,
textarea {
  margin: 0;
}
td {
  margin: 0;
  padding: 0;
}
td,
input {
  line-height: 1em;
}
a {
  color: red;
}
a:hover {
  color: blue;
}
div a {
  color: green;
}
p a span {
  color: yellow;
}
.foo .bar .qux,
.foo .baz .qux {
  display: block;
}
.qux .foo .bar,
.qux .foo .baz {
  display: inline;
}
.qux.foo .bar,
.qux.foo .baz {
  display: inline-block;
}
.qux .foo .bar .biz,
.qux .foo .baz .biz {
  display: none;
}
.a.b.c {
  color: red;
}
.c .b.a {
  color: red;
}
.foo .p.bar {
  color: red;
}
.foo.p.bar {
  color: red;
}
.foo + .foo {
  background: amber;
}
.foo + .foo {
  background: amber;
}
.foo + .foo,
.foo + .bar,
.bar + .foo,
.bar + .bar {
  background: amber;
}
.foo a > .foo a,
.foo a > .bar a,
.foo a > .foo b,
.foo a > .bar b,
.bar a > .foo a,
.bar a > .bar a,
.bar a > .foo b,
.bar a > .bar b,
.foo b > .foo a,
.foo b > .bar a,
.foo b > .foo b,
.foo b > .bar b,
.bar b > .foo a,
.bar b > .bar a,
.bar b > .foo b,
.bar b > .bar b {
  background: amber;
}
.other ::fnord {
  color: red;
}
.other::fnord {
  color: red;
}
.other ::bnord {
  color: red;
}
.other::bnord {
  color: red;
}
.blood {
  color: red;
}
.bloodred {
  color: green;
}
#blood.blood.red.black:blood {
  color: black;
}
:nth-child(3) {
  selector: interpolated;
}
.test-rule:nth-child(3) {
  selector: interpolated;
}
.test-rule:nth-child(odd):not(:nth-child(3)) {
  color: #ff0000;
}
[prop],
[prop=10%],
[prop|="value3"],
[prop*="val3"],
[|prop~="val3"],
[*|prop$="val3"],
[ns|prop^="val3"],
[p^="val3"],
[p=3],
[p] {
  attributes: yes;
}
/**
 * https://www.w3.org/TR/selectors-4/#attribute-case
 */
a[href*="insensitive" i] {
  color: cyan;
}
a[href*="cAsE" s] {
  color: pink;
}
a[href*="less" I] {
  background-color: silver;
}
a[href*="less" S] {
  background-color: red;
}
/*
Large comment means chunk will be emitted after } which means chunk will begin with whitespace...
blank blank blank blank blank blank blank blank blank blank blank blank blank blank blank blank
blank blank blank blank blank blank blank blank blank blank blank blank blank blank blank blank
blank blank blank blank blank blank blank blank blank blank blank blank blank blank blank blank
blank blank blank blank blank blank blank blank blank blank blank blank blank blank blank blank
blank blank blank blank blank blank blank blank blank blank blank blank blank blank blank blank
*/
.blood {
  color: red;
}
.foo:not(.tst.only-nested .level2:hover) {
  test: only-nested;
}
.foo.nestend-and-non-nested:not(.tst.nestend-and-non-nested:hover) {
  test: nestend-and-non-nested;
}
.selector:not(:hover) {
  test: global scope;
}
.extend-this,
.active.first-level .second-level,
.first-level .second-level.active2 {
  content: '\2661';
}
a:is(.b, :is(.c)) {
  color: blue;
}
a:is(.b, :is(.c), :has(div)) {
  color: red;
}
@-moz-document domain("example.com") {
  :is(
    [a1],
    [a2]
  ):is( [a3], [a4]:not( :is([a5],[a6])):is( [a7]:not(:is([a8],[a9])), [b1]:not(:is([b2],[b3]))):is(
      [b4],[b5]
    ), [b6], [b7]) {
    color: red;
  }
}
@-moz-document domain("example.com") {
  :is([foo], [bar], [baz]) {
    color: red;
  }
}
:is(.color-1, .focus-color-1:focus, .hover-color-1:hover) {
  color: red !important;
}
:is(.color-2, .focus-color-2:focus, .hover-color-2:hover) {
  color: green !important;
}
